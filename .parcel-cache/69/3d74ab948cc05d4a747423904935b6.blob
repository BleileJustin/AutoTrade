const apiKey = require("../key/index.js");
const CoinbasePro = require("coinbase-pro");
const apiURI = "https://api.pro.coinbase.com";
const key = apiKey.get("COINBASE_API_KEY");
const secret = apiKey.get("COINBASE_API_SECRET");
const passphrase = apiKey.get("COINBASE_API_PASSPHRASE");
const socketUrl = apiKey.get("WEBSOCKET_URL");
const sandboxURI = "api.pro.coinbase.com";
const useSandbox = false;
/*/Server stuff **
const proxy = () => {
const httpProxy = require("http-proxy");
const httpProxyMiddleware = require("http-proxy-middleware");
const express = require("express");
const app = express();
const proxy = httpProxy.createProxyServer({});
const port = 3001;

app.use((req, res, next) => {
res.header("Access-Control-Allow-Origin", "*");
next();
});

app.use(
"/api-coinbase-pro",
httpProxyMiddleware.createProxyMiddleware({
target: "https://api.pro.coinbase.com",
changeOrigin: true,
pathRewrite: {
[`^/api-coinbase-pro`]: "",
},
})
);

app.use(express.static(path.join(__dirname, "../../dist")));

app.listen(port, () => console.log("Started proxy on port", port));
};
proxy();
/*/
const aClient = new CoinbasePro.AuthenticatedClient(key, secret, passphrase, apiURI);
module.exports = {
  placeOrder: async params => {
    const order = aClient.placeOrder(params);
    return order;
  },
  getAccount: async id => {
    const account = await aClient.getAccount(id);
    console.log(account);
    return account;
  },
  getAccounts: async () => {
    const accounts = await aClient.getAccounts();
    console.log(accounts);
  }
};
